name: Automatic deployments

on:
  workflow_dispatch:
  push:
    tags:
      - '*'

# GLOBAL ENVIRONMENT VARIABLES
env:
  SFTP_HOSTNAME: ${{ secrets.SFTP_HOSTNAME }}
  SFTP_PORT: ${{ secrets.SFTP_PORT }}
  SFTP_USER: ${{ secrets.SFTP_USER }}
  SFTP_PASSWORD: ${{ secrets.SFTP_PASSWORD }}
  SFTP_REMOTE_PATH: '/home/${{ secrets.SFTP_USER }}/www'
  OCI_TENANCY_NS: axkiihq3lcps
  OCI_REGISTRY: eu-paris-1.ocir.io
  OCI_REPOSITORY: grenadille/website
  OCI_GITHUB_USERNAME: ${{ secrets.OCI_GITHUB_USERNAME }}
  OCI_GITHUB_PASSWORD: ${{ secrets.OCI_GITHUB_PASSWORD }}
  DOCKERFILE: docker/Dockerfile

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build:dist

      - name: Deploy
        uses: wlixcc/SFTP-Deploy-Action@v1.2.4
        with:
          username: ${{ env.SFTP_USER }}
          port: ${{ env.SFTP_PORT }}
          server: ${{ env.SFTP_HOSTNAME }}
          password: ${{ env.SFTP_PASSWORD }}
          local_path: './dist/*'
          remote_path: ${{ env.SFTP_REMOTE_PATH }}
          sftp_only: true

  deploy-oci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to OCIR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.OCI_REGISTRY }}
          username: ${{ env.OCI_TENANCY_NS }}/${{ env.OCI_GITHUB_USERNAME }}
          password: ${{ env.OCI_GITHUB_PASSWORD }}

      - name: Set variables
        run: |
          echo "REPOSITORY=${{ env.OCI_REGISTRY }}/${{ env.OCI_TENANCY_NS }}/${{ env.OCI_REPOSITORY }}" >> $GITHUB_ENV

      - name: Build and push Docker image with latest tag
        run: |
          DOCKER_BUILDKIT=1 docker build -f ${{ env.DOCKERFILE }} -t ${{ env.REPOSITORY }}:latest .
          docker push ${{ env.REPOSITORY }}:latest

      - name: Add version tag
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          docker tag ${{ env.REPOSITORY }}:latest ${{ env.REPOSITORY }}:${GITHUB_REF#refs/tags/}
          docker push ${{ env.REPOSITORY }}:${GITHUB_REF#refs/tags/}
